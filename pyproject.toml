[tool.poetry]
name = "Patsy"
version = "1.0.0"
description = "Transforms and stores help system message content for future processing."
authors = ["Chris Lovering <chris.lovering.95@gmail.com>"]
license = "MIT"

[build-system]
requires = ["poetry-core>=1.2.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
python = "3.11.*"

alembic = {version = "1.12.0", extras = ["tz"]}
fastapi = "0.104.1"
SQLAlchemy = {version = "2.0.19", extras = ["asyncio", "postgresql_asyncpg"]}
pydantic = "1.10.12"
uvicorn = {extras = ["standard"], version = "0.23.2"}

[tool.poetry.group.dev.dependencies]
poetry-plugin-export = "1.5.0"
taskipy = "1.12.0"

[tool.poetry.group.linting.dependencies]
black = "23.9.1"
mypy = "1.5.1"
pre-commit = "3.4.0"
ruff = "0.0.289"

[tool.taskipy.tasks]
lint = "pre-commit run --all-files"
precommit = "pre-commit install"
revision = "alembic revision --autogenerate -m"
migrate = "alembic upgrade head"
black = "black migrations patsy"

[tool.mypy]
plugins = "pydantic.mypy"
strict = true
implicit_reexport = true
show_error_codes = true
# Additional error codes which have to be enabled by name
# See: https://mypy.readthedocs.io/en/stable/error_code_list2.html
enable_error_code = "ignore-without-code"

[tool.ruff]
target-version = "py311"
extend-exclude = [".cache", "migrations", "scripts"]
ignore = [
    "ANN002", "ANN003", "ANN101", "ANN102",
    "ARG003",
    "C901",
    "D100", "D104", "D105", "D107", "D203", "D212", "D214", "D215", "D416",
]
line-length = 120
select = ["ALL"]

[tool.ruff.per-file-ignores]
"patsy/models/orm/*" = ["A003"]

[tool.ruff.isort]
order-by-type = false
case-sensitive = true
combine-as-imports = true

[tool.black]
line-length = 120
